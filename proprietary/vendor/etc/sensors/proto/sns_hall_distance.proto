// @file sns_hall_distance.proto
//
// Defines standard message types for the HALL_DISTANCE
//
// Copyright (c) 2017-2018 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
syntax = "proto2";
import "nanopb.proto";
import "sns_std_sensor.proto";

enum sns_hall_distance_msgid
{
  option (nanopb_enumopt).long_names = false;

  SNS_HALL_DISTANCE_MSGID_SNS_HALL_DISTANCE_DATA = 1024;
  SNS_HALL_DISTANCE_MSGID_UPDATE_CAL_REQ = 473;
  SNS_HALL_DISTANCE_MSGID_UPDATE_CAL_RESP = 474;
  SNS_HALL_DISTANCE_MSGID_UPDATE_CAL_UPDATE_DONE = 475;
}


// Configuration Message
// Used to either request for a certain configuration of the Sim Sensor or
// alter an already existing configuration of the Simulation Sensor
// Uses sns_std_sensor_config defined in sns_std_sensor.proto
// The message field definitions are as follows:
// 1) float sample_rate
//      containing the required sample rate of the Sim sensor in hertz

// Data Message
// Output data event generated by the hall_distance sensor.
message sns_hall_distance_data
{
  // oem1 Vector along axis x,y,z in m/s2
  repeated float hall_distance = 1 [(nanopb).max_count = 3];

  // Accuracy of the data
  required sns_std_sensor_sample_status accuracy = 2;
}

message sns_hall_distance_update_cal_table_event
{
  // Result if the test execution was successful:
  // true for success
  // false for failure
  required bool test_passed = 1 [default = true];
}
